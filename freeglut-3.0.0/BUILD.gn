declare_args() {
  if (is_win) {
    FREEGLUT_REPLACE_GLUT = true
  }
  FREEGLUT_GLES = false
}

config("freeglut_config") {
  include_dirs = [ "include" ]
  libs = []
  if (is_win) {
    libs += [
      "opengl32",
      "winmm",
      "gdi32",
    ]
  } else if (is_linux) {
    libs += [
      "GL",
      "GLU",
      "X11",
      "Xxf86vm",
      "Xrandr",
    ]
  }
}

static_library("freeglut") {
  libs = []
  cflags = []
  include_dirs = [
    "src",
    "include",
  ]
  sources = [
    "include/GL/freeglut.h",
    "include/GL/freeglut_ext.h",
    "include/GL/freeglut_std.h",
    "include/GL/glut.h",
    "src/fg_callbacks.c",
    "src/fg_cursor.c",
    "src/fg_display.c",
    "src/fg_ext.c",
    "src/fg_font_data.c",
    "src/fg_gamemode.c",
    "src/fg_geometry.c",
    "src/fg_gl2.c",
    "src/fg_gl2.h",
    "src/fg_init.c",
    "src/fg_init.h",
    "src/fg_input_devices.c",
    "src/fg_internal.h",
    "src/fg_joystick.c",
    "src/fg_main.c",
    "src/fg_misc.c",
    "src/fg_overlay.c",
    "src/fg_spaceball.c",
    "src/fg_state.c",
    "src/fg_stroke_mono_roman.c",
    "src/fg_stroke_roman.c",
    "src/fg_structure.c",
    "src/fg_teapot.c",
    "src/fg_teapot_data.h",
    "src/fg_videoresize.c",
    "src/fg_window.c",
  ]
  if (!FREEGLUT_GLES) {
    sources += [
      "src/fg_font.c",
      "src/fg_menu.c",
    ]
  } else {
    sources += [ "src/gles_stubs.c" ]
  }
  if (is_win) {
    sources += [
      "src/mswin/fg_cursor_mswin.c",
      "src/mswin/fg_display_mswin.c",
      "src/mswin/fg_ext_mswin.c",
      "src/mswin/fg_gamemode_mswin.c",
      "src/mswin/fg_init_mswin.c",
      "src/mswin/fg_input_devices_mswin.c",
      "src/mswin/fg_internal_mswin.h",
      "src/mswin/fg_joystick_mswin.c",
      "src/mswin/fg_main_mswin.c",
      "src/mswin/fg_menu_mswin.c",
      "src/mswin/fg_spaceball_mswin.c",
      "src/mswin/fg_state_mswin.c",
      "src/mswin/fg_structure_mswin.c",
      "src/mswin/fg_window_mswin.c",
    ]
    libs += [
      "opengl32",
      "winmm",
      "gdi32",
    ]
  } else if (is_linux) {
    sources += [
      "src/x11/fg_cursor_x11.c",
      "src/x11/fg_ext_x11.c",
      "src/x11/fg_gamemode_x11.c",
      "src/x11/fg_glutfont_definitions_x11.c",
      "src/x11/fg_init_x11.c",
      "src/x11/fg_input_devices_x11.c",
      "src/x11/fg_internal_x11.h",
      "src/x11/fg_joystick_x11.c",
      "src/x11/fg_main_x11.c",
      "src/x11/fg_menu_x11.c",
      "src/x11/fg_spaceball_x11.c",
      "src/x11/fg_state_x11.c",
      "src/x11/fg_structure_x11.c",
      "src/x11/fg_window_x11.c",
      "src/x11/fg_xinput_x11.c",
    ]
    if (!FREEGLUT_GLES) {
      sources += [
        "src/x11/fg_display_x11_glx.c",
        "src/x11/fg_internal_x11_glx.h",
        "src/x11/fg_state_x11_glx.c",
        "src/x11/fg_state_x11_glx.h",
        "src/x11/fg_window_x11_glx.c",
        "src/x11/fg_window_x11_glx.h",
      ]
      libs += [
        "GL",
        "GLU",
        "X11",
        "Xxf86vm",
        "Xrandr",
      ]
    } else {
      libs += [
        "GLESv2",
        "GLESv1_CM",
        "EGL",
      ]
    }
  }
  if (FREEGLUT_GLES) {
    sources += [
      "src/egl/fg_display_egl.c",
      "src/egl/fg_ext_egl.c",
      "src/egl/fg_init_egl.c",
      "src/egl/fg_init_egl.h",
      "src/egl/fg_internal_egl.h",
      "src/egl/fg_state_egl.c",
      "src/egl/fg_state_egl.h",
      "src/egl/fg_structure_egl.c",
      "src/egl/fg_structure_egl.h",
      "src/egl/fg_window_egl.c",
      "src/egl/fg_window_egl.h",
    ]
  }
  libs += [ "m" ]
  if (is_win) {
    defines += [
      "-D_CRT_SECURE_NO_WARNINGS",
      "-D_WIN32_WINNT=0x0500",
      "-DWINVER=0x0500",
    ]
  }
  if (is_linux) {
    cflags += [
      "-Wall",
      "-pedantic",
    ]
  }

  configs += [ "//build/config:precompiled_headers" ]

  public_deps = []
  deps = []

  defines = []
  public_configs = [ ":freeglut_config" ]

  if (!is_debug && (is_win || is_android)) {
    configs -= [ "//build/config/compiler:default_optimization" ]
    configs += [ "//build/config/compiler:optimize_max" ]
  }
}
